<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jk.mybatis.simple.mapper.SysUserMapper">
  <resultMap id="BaseResultMap" type="jk.mybatis.simple.model.SysUser">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="user_info" jdbcType="LONGVARCHAR" property="userInfo" />
    <result column="head_img" jdbcType="LONGVARBINARY" property="headImg" />
  </resultMap>
  <resultMap id="userRoleListMap" extends="BaseResultMap" type="jk.mybatis.simple.model.SysUser">
    <collection property="roleList" columnPrefix="role_" resultMap="jk.mybatis.simple.mapper.SysRoleMapper.rolePrivilegeListMap"/>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="jk.mybatis.simple.model.SysUser">
    insert into sys_user (user_id, user_name, user_password, 
      user_email, create_time, user_info, 
      head_img)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{userEmail,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{userInfo,jdbcType=LONGVARCHAR}, 
      #{headImg,jdbcType=LONGVARBINARY})
  </insert>
  <update id="updateByPrimaryKey" parameterType="jk.mybatis.simple.model.SysUser">
    update sys_user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      user_info = #{userInfo,jdbcType=LONGVARCHAR},
      head_img = #{headImg,jdbcType=LONGVARBINARY}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select user_id, user_name, user_password, user_email, create_time, user_info, head_img
    from sys_user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select user_id, user_name, user_password, user_email, create_time, user_info, head_img
    from sys_user
  </select>
  <select id="selectAllUserAndRoles" resultMap="userRoleListMap">
      /*
      select
        u.user_id,
        u.user_name,
        u.user_password,
        u.user_email,
        u.user_info,
        u.head_img,
        u.create_time,
        r.role_id role_role_id,
        r.role_name role_role_name,
        r.role_enabled role_role_enabled,
        r.create_by role_create_by,
        r.create_time role_create_time
      from sys_user u
      inner JOIN sys_user_role ur on u.user_id = ur.user_id
      inner JOIN sys_role r on ur.role_id = r.role_id
      */
      SELECT
        u.user_id,
        u.user_name,
        u.user_password,
        u.user_email,
        u.user_info,
        u.head_img,
        u.create_time,
        r.role_id role_role_id,
        r.role_name role_role_name,
        r.role_enabled role_role_enabled,
        r.create_by role_create_by,
        r.create_time role_create_time,
        p.privilege_id role_privilege_privilege_id,
        p.privilege_name role_privilege_privilege_name,
        p.privilege_url role_privilege_privilege_url
      FROM sys_user u
      INNER JOIN sys_user_role ur ON u.user_id = ur.user_id
      INNER JOIN sys_role r ON ur.role_id = r.role_id
      INNER JOIN sys_role_privilege rp ON rp.role_id = r.role_id
      INNER JOIN sys_privilege p ON p.privilege_id = rp.privilege_id
  </select>
</mapper>